// Generated by CoffeeScript 1.6.3
(function() {
  var MailService, TrelloApi, TrelloView, config, fs, handlebars, mandrill, _;

  fs = require('fs');

  _ = require('underscore');

  mandrill = require('node-mandrill')('rOpF3MDFRDN55QV07ypMzA');

  TrelloApi = require('./trello-api');

  TrelloView = require('../views/trello-view');

  handlebars = require('handlebars');

  config = JSON.parse(fs.readFileSync("config/config.json"));

  module.exports = MailService = (function() {
    MailService.subject = null;

    MailService.from_address = null;

    MailService.template_path = 'mail-report.tmpl';

    MailService.template = null;

    function MailService() {
      var tmpl;
      if (MailService.subject === null) {
        MailService.subject = config.mail.subject;
        MailService.from_address = config.mail.fromAddress;
        tmpl = fs.readFileSync(__dirname + '/' + MailService.template_path);
        MailService.template = handlebars.compile(tmpl.toString());
      }
    }

    MailService.prototype.send = function(text, to_address, subj) {
      var mail,
        _this = this;
      mail = {
        to: [
          {
            email: to_address
          }
        ],
        from_email: MailService.from_address,
        from_name: "TrellMe",
        subject: subj,
        html: text
      };
      return mandrill('/messages/send', {
        message: mail
      }, function(error, response) {
        if (error) {
          return console.log(JSON.stringify(error));
        } else {

        }
      });
    };

    MailService.prototype.send_report = function(users) {
      var api, vb,
        _this = this;
      api = new TrelloApi();
      vb = new TrelloView();
      return _.each(users, function(user) {
        if (!_.isUndefined(user.access_token)) {
          return api.collect_data_sync(user, function(err, result) {
            return vb.getSummary(user, function(err, result) {
              var mailtext;
              mailtext = MailService.template({
                content: result
              });
              _this.send(mailtext, user.email, MailService.subject);
              return console.log("report sent to " + user.email);
            });
          });
        }
      });
    };

    return MailService;

  })();

}).call(this);
