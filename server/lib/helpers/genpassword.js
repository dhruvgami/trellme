// Generated by CoffeeScript 1.6.3
(function() {
  var GenPassword, crypto;

  crypto = require('crypto');

  module.exports = GenPassword = (function() {
    function GenPassword() {}

    GenPassword.SaltLength = 9;

    GenPassword.prototype.createHash = function(password) {
      var hash, salt;
      salt = this.generateSalt(GenPassword.SaltLength);
      hash = this.md5(password + salt);
      return salt + hash;
    };

    GenPassword.prototype.validateHash = function(hash, password) {
      var salt, validHash;
      salt = hash.substr(0, GenPassword.SaltLength);
      validHash = salt + this.md5(password + salt);
      return hash === validHash;
    };

    GenPassword.prototype.generateSalt = function(len) {
      var i, p, salt, set, setLen;
      set = "0123456789abcdefghijklmnopqurstuvwxyzABCDEFGHIJKLMNOPQURSTUVWXYZ";
      setLen = set.length;
      salt = "";
      i = 0;
      while (i < len) {
        p = Math.floor(Math.random() * setLen);
        salt += set[p];
        i++;
      }
      return salt;
    };

    GenPassword.prototype.md5 = function(string) {
      return crypto.createHash("md5").update(string).digest("hex");
    };

    return GenPassword;

  })();

}).call(this);
